//var quizz_module ;
var Player	 = require('Player').Player;

/*var test = new Player("stormwolf");
console.log("My name is "+test.get_name());
console.log(test);*/
module.exports	= (function(){
	var player_list;
	var game_list;
	var lobby_ref;
	var lobby_name;
	var io;

		
	var Lobby			= function(lobby){
		this.lobby_name 	= lobby;
		this.lobby_ref		= lobby;
		this.player_list 	= new Array();
		this.game_list		= new Array();
		this.io 			= '';
	};
	
	Lobby.prototype	= function(){
		var constructor	= Lobby;
		

		
		//set the name of the lobby
		var set_name		= function(name){
			this.lobby_name	= name;
		};
		
		var set_io			= function(io){
			console.log("** settting the IO ****");
			this.io = io;	
		};
		
		//return the lobby reference
		var get_reference	= function(){
			return this.lobby_ref;
		};
		
		//return the name of the lobby
		var get_name		= function(){
			return this.lobby_name;
		};
		
		//return the list of the players
		var get_players		= function(){
			return this.player_list;
		};
		
		//return a specific user
		var get_player		= function(player_ref){
			return this.player_list[player_ref];
		};
		
		var get_players_data	= function(){
			var players 		= this.player_list;
			var size 			= players.length;
			var players_data 	= {};
			var names = new Array();

			console.log("Get player data ");
			console.log(this.player_list);

			for(elt in this.player_list){
				console.log(elt);
				names.push(this.player_list[elt].get_name());
			}
			
			players_data.players 	= names;
			players_data.lobby		= this.lobby_name;
			
			return players_data;
		};
		
		var get_games_data 		= function(){
			var game_data = new Array();
			
			
			console.log("--- Dans get games data ----");
			for(elt in this.game_list){
				console.log("* Game reference : "+this.game_list[elt].get_reference());
				
				game_data.push({name : this.game_list[elt].get_name()
								,gref		: this.game_list[elt].get_reference()
								,players	: Object.keys(this.game_list[elt].get_players())
							});
			}
			
			return game_data;
		};
		
		//return the list of games in this lobby
		var get_game_list	= function(){
			return this.game_list;
		};
		
		//return a specific game
		var get_game 		= function(game_ref){
			return this.game_list[game_ref];
		};
		
		//add a player to the lobby
		var add_player		= function(player){
			console.log("--------- AJOUT DE JOUEUR dans un lobby -------");
			console.log(player.get_name());

			//if the user doesn't already exist, we add him to the lobby
			if(this.player_list[player.get_reference()] == undefined){
				//add the player to the player list of this lobby
				this.player_list[player.get_reference()] = player;
				
				//add the player to the room of this lobby
				player.get_socket().join(this.lobby_ref);
				
				
				//Emit information to update the view of the players in this room
				this.io.to(this.lobby_ref).emit('message', "User ["+player.get_name()+"] entered Lobby ["+this.lobby_ref+']');
			
			}
			else{
				//output or log a warning, because we're trying to add
				//a player that has already been added to this lobby.
				console.log("* WARN : Player "+player.get_reference()+" is already present in the player list of lobby "+this.get_name());
			}
		};
		
		//add a game in the game list of this lobby
		var add_game		= function(game){
			//if the game doesn't already exist, we add it to the lobby
			if(this.game_list[game.get_reference()] == undefined){
				this.game_list[game.get_reference()] = game;
				console.log("* Game added in lobby");	
			}
			else {
				//output or log a warning, because we're trying to add
				//a game that has already been added to this lobby.
				console.log("* Trying to add the game "+game.get_name()+" to the lobby "+this.get_name());
				console.log("* but the game already seems to exist.");
				console.log(this.game_list[game.get_reference()]) ;
			}
		};
		
		//remove a player from the lobby
		var remove_player	= function(player_ref){
			delete this.player_list[player_ref];

			//Emit information to update the view of the players in this room
			this.io.to(this.lobby_ref).emit('message', "User ["+player_ref+"] left the Lobby ["+this.lobby_ref+']');
		};
		
		//remove a game from the game list
		var remove_game		= function(game_ref){
			this.game_list[game_ref] = null;
		};
		
		return{
			get_reference		: get_reference
			,get_name			: get_name
			,get_players		: get_players
			,get_player			: get_player
			,get_players_data	: get_players_data
			,get_game_list		: get_game_list
			,get_game 			: get_game
			,get_games_data		: get_games_data
			,add_player			: add_player
			,add_game			: add_game
			,remove_player		: remove_player
			,remove_game		: remove_game
			,set_name			: set_name
			,set_io				: set_io
		};
	}();
	
	return {
		Lobby : Lobby
	};
	
})();


