
module.exports		= (function(){
	
	var Quizz		= function(io, lobby_ref,data){
		this.$io				= io;
		this.$items 			= new Array();
		this.$players			= new Array();
		this.$game_reference 	= "QUIZZ_"+Math.round(new Date().getTime() / 1000);
		
		this.$player_room		= this.$game_reference + '_players';
		this.$spectator_room 	= this.$game_reference + '_spectators';
		this.$lobby_reference	= lobby_ref;
		this.init();
		console.log("-------- Quizz game created ----------");
	};
	//Variables
		var $io;
		var $player_room;
		var $spectator_room;
		var $items;
		var $players;
		var $spectators;
		var $game_reference;
		var $game_name;
		var $current_item;
		var $lobby_reference;

	
	
	
	Quizz.prototype	= function(){
		var numseq = 0;

		var load_item_list	= function(){
			this.$items = new Array(
				 {id	: 1, item	: 'あ', answer	: 'a'}
				,{id	: 2, item	: 'い', answer	: 'i'}
				,{id	: 3, item	: 'う', answer	: 'u'}
				,{id	: 4, item	: 'え', answer	: 'e'}
				,{id	: 5, item	: 'お', answer	: 'o'}
				,{id	: 6, item	: 'か', answer 	: 'ka'}
				,{id	: 7, item	: 'き', answer 	: 'ki'}
				,{id	: 8, item	: 'く', answer 	: 'ku'}
				,{id	: 9, item	: 'け', answer 	: 'ke'}
				,{id	: 10, item	: 'こ', answer 	: 'ko'}
			);
		};
		
		var init		= function(){
			numseq++;
			this.$game_name	= "QUIZZ "+numseq;
		};
		
		var emit_item	= function(){
			var i = (Math.floor(Math.random() * 10));
			
			this.$current_item = this.$items[i];
			
			//emit id & item to every player in the room
			this.$io.to(this.$player_room).emit('quizz_item',{item : this.$items[i].item, 
																	id : this.$items[i].id});
			//emit item to every spectator
			this.$io.to(this.$spectator_room).emit('spectator_item',this.$items[i].item);
		};
		
		
		var validate_answer	= function(socket,id,answer){
			var correct = false;
			
			//if the user is trying to answer to the right item
			if(this.$current_item.id == id){
				correct = (this.$current_item.answer === answer);
			}
			
			socket.emit('validation',correct);
		};
		
		//Add a player to the player list
		var add_player			= function(player){
	
		//if the player doesn't already exist, add him		
			if(this.$players[player.reference] == undefined){
				this.$players[player.reference] = player;
				console.log("Player added : "+player.get_name());
			}
			else{
				console.log("Player not added : "+player.get_name());
				console.log("Reference used : "+player.reference);
				//output or log a warning, because we tried to add a user
				//that already existed. 
			}
		};
		
		//Add a spectator to the spectator list
		var add_spectator		= function(spectator){
			//if the spectator doesn't already exist, add him
			if(this.$spectator[spectator.reference] == undefined){
				this.$spectator[spectator.reference] = spectator;
			}
			else{
				//output or log a warning, because we tried to add a spectator
				//that already existed.
			}
		};
		
		//remove a player from the player list
		var remove_player		= function(player){
			this.$players[player.reference] = null;
		};
		
		//remove a spectator from the spectator list
		var remove_spectator	= function(spectator){
			this.$spectatorss[spectator.reference] = null;
		};
		
		var get_player_room_reference 		= function(){
			return this.$player_room;
		};
		
		var get_spectator_room_reference 	= function(){
			return this.$spectator_room;
		};
		
		var get_reference 					= function(){
			return this.$game_reference;
		};
		
		var get_name 					= function(){
			return this.$game_name;
		};
		
		var get_players			= function(){
			return this.$players;
		};
		
		var on				= function(io,socket,data){
			console.log("---------- Dans game.on() ------------");
			console.log(data);
		};
		
		return {
			load_item_list					: load_item_list
			//,emit_items						: emit_items
			,validate_answer				: validate_answer
			,add_player						: add_player
			,add_spectator					: add_spectator
			,remove_player					: remove_player
			,remove_spectator				: remove_spectator
			,get_player_room_reference		: get_player_room_reference
			,get_spectator_room_reference	: get_spectator_room_reference
			,get_reference					: get_reference
			,get_players					: get_players
			,get_name						: get_name
			,init							: init
			,on								: on
		}; 
	}();
	
	return{
		Quizz	: Quizz
	};
})();
